<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>

.auth-container {
  position: relative;
  width: 350px;
  height: 500px;
  background: rgba(0, 0, 0, 0.75);
  border-radius: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  padding-inline: 32px;
  overflow: hidden;
}

.auth-container::before {
  content: "";
  position: absolute;
  height: 650px;
  width: 650px;
  background: conic-gradient(transparent, transparent, transparent, #d400d4);
  animation: animate 4s linear infinite;
  animation-delay: -2s;
}

.auth-container::after {
  content: "";
  position: absolute;
  height: 650px;
  width: 650px;
  background: conic-gradient(transparent, transparent, transparent, #00cfff);
  animation: animate 4s linear infinite;
}

@keyframes animate {
  0% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(360deg);
  }
}

.auth-image {
  position: absolute;
  inset: 5px;
  background-color: #0c1022;
  z-index: 1;
  border-radius: 16px;
}

.auth-form-box {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 60vh;
}

.auth-form-box .auth-form h2 {
  font-size: 32px;
  color: #fff;
  text-align: center;
}

.auth-form .auth-input-box {
  position: relative;
  margin: 30px 0;
  width: 310px;
  border-bottom: 2px solid #fff;
}

.auth-input-box input {
  width: 100%;
  height: 50px;
  background: transparent;
  border: none;
  outline: none;
  font-size: 16px;
  padding: 0 35px 0 5px;
  color: #fff;
}

input:focus ~ label,
input:valid ~ label {
  top: -5px;
}

.auth-input-box label {
  position: absolute;
  color: #fff;
  top: 50%;
  left: 5px;
  transform: translateY(-50%);
  font-size: 16px;
  pointer-events: none;
  transition: .3s;
}

.auth-group {
  display: flex;
  justify-content: space-between;
  font-size: 13px;
}

.auth-group a {
  position: relative;
  top: -15px;
  color: #fff;
  text-decoration: none;
  font-weight: 500;
}

.auth-button {
  height: 40px;
  width: 100px;
  font-size: 15px;
  font-weight: 600;
  cursor: pointer;
  outline: none;
  border: none;
  border-radius: 5px;
}

.auth-button:focus {
  color: #fff;
  background-color: #0c1022;
  border: 2px solid #fff;
}
    </style>
</head>
<body>
    <div class="auth-container" id="auth-loginContainer">
        <div class="auth-image">
            <div class="auth-form-box">
                <div class="auth-form">
                    <h2>Login</h2>
                    <div class="auth-input-box">
                        <input type="text" id="auth-loginEmail" required />
                        <label for="auth-loginEmail">Email</label>
                    </div>
                    <div class="auth-input-box">
                        <input type="password" id="auth-loginPassword" required />
                        <label for="auth-loginPassword">Password</label>
                    </div>
                    <div class="auth-group">
                        <a href="#">Forgot Password</a>
                        <a href="#" id="auth-goToRegister">Sign Up</a>
                    </div>
                    <button id="auth-loginButton" class="auth-button">Sign In</button>
                    <p id="auth-loginMessage" class="auth-error"></p>
                </div>
            </div>
        </div>
    </div>

    <script>
        // JavaScript for handling the login form
        document.getElementById("auth-loginButton").addEventListener("click", async () => {
            const email = document.getElementById("auth-loginEmail").value;
            const password = document.getElementById("auth-loginPassword").value;
            const messageElement = document.getElementById("auth-loginMessage");

            try {
                const response = await fetch("/auth/login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ email, password })
                });

                const data = await response.json();

                if (response.ok) {
                    // Store the token in localStorage
                    localStorage.setItem("token", data.token);
                    // Redirect to the admin dashboard
                    window.location.href = "/admin/dashboard";
                } else {
                    // Display error message
                    messageElement.textContent = data.message || "Login failed. Please try again.";
                }
            } catch (error) {
                messageElement.textContent = "An error occurred. Please try again.";
            }
        });

        document.getElementById("auth-goToRegister").addEventListener("click", (e) => {
    e.preventDefault(); // Prevent the default link behavior
    window.location.href = "/auth/register"; // Redirect to the registration page
});
    </script>
</body>
</html>